{"version":3,"sources":["components/Header/logo_aviasales.svg","components/Header/index.js","components/Filter/index.js","components/Sidebar/index.js","components/Tabs/index.js","components/Flight/index.js","components/Ticket/index.js","components/TicketList/index.js","components/Main/index.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","style","width","Filter","_filterText","all","0","1","2","3","this","renderFilterItems","e","highlightBuffered","props","timeout","onChange","ms","watchingCheckbox","target","classList","add","setTimeout","remove","FILTER_RAW","Object","entries","filters","FILTER_ITEMS","i","length","filterName","filterStatus","push","key","type","id","checked","handleClick","htmlFor","Component","Sidebar","Tabs","onClick","data-sorter","highlight","cssClass","contains","currentTarget","querySelector","Flight","state","details","map","segment","origin","destination","timeTakeoff","minutesDuration","start","Date","end","parse","stH","getHours","stM","getMinutes","endH","endM","date","duration","minutes","h","parseInt","m","Math","round","getDuration","arr","describeStops","stops","item","undefined","Ticket","ticketInfo","price","carrier","segments","TicketList","ticketsArray","tickets","Main","allowRender","_buf","askServer","sort","a","setState","prevProps","url","URL","entryPath","searchPath","getSearchID","path","console","group","log","getTicketList","ticketsAll","rawFiltered","targetFilters","filter","ticket","includes","getMaxStops","resultTicketList","cheapest","fastest","groupEnd","max","fetch","then","res","json","searchId","store","stop","warn","fetchTicketPack","pack","req","status","slice","b","reduce","prev","App","_timeoutBeforeSearch","handleSearchParams","bufferClicks","timer","animTimer","TIMEOUT_TO_SETSTATE","SAVED_THIS","bufferSort","bufferFilters","assign","clearTimeout","dataset","sorter","getNewFilter","bufferAnim","document","animTip","newState","filterID","every","st","values","some","hasOwnProperty","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0fbffdd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_aviasales.0c089234.svg\";","import React from 'react'\nimport logo from './logo_aviasales.svg'\nimport './style.css'\n\nexport default function Header() {\n  return (\n    <div className=\"logo center\">\n      <p className=\" timeout__tip\">Ожидание ввода...</p>\n      <div className='timeout'>\n      </div>\n      <img src={logo} alt='' style={{ width: '82px' }} />\n    </div>\n  );\n}","import React, { Component } from 'react'\nimport './style.css'\n\nexport default class Filter extends Component {\n  render() {\n    return (\n      <form className=\"form filter\">\n        <h3 className=\"form__header\">Количество пересадок</h3>\n        {this.renderFilterItems()}\n      </form>\n    );\n  }\n  handleClick(e) {\n    this.highlightBuffered(e, this.props.timeout);\n    this.props.onChange(e);\n  }\n  // TODO: добавить мгновенный UI-фидбек на клик. Функция с переключением CSS-классов\n  // как связать удаление .buffered с обновлением state.filters?\n  // вариант 1: передавать delay в this.highlightBuffered\n  // вариант 2: фильтры ж нам и так передаются в пропсах? мб на них завязать?\n  // UPD: выбрал 1. Проблемы: \n  // - отдельные таймеры (исчезают не одновременно) \n  // - нет отклика на повторный клик. \n  // Че, пацаны, closure?\n  highlightBuffered(e, ms) {\n    let watchingCheckbox = e.target;\n    watchingCheckbox.classList.add('buffered');\n    setTimeout(() => {watchingCheckbox.classList.remove('buffered');}, ms)\n  }\n  renderFilterItems() {\n    const FILTER_RAW = Object.entries(this.props.filters);\n    const FILTER_ITEMS = [];\n    for (let i = 0; i < FILTER_RAW.length; i += 1) {\n      const [filterName, filterStatus] = FILTER_RAW[i];\n      FILTER_ITEMS.push(\n        <div className=\"filter__item\" key={i}>\n          <input className=\"filter__input\" type=\"checkbox\"\n            id={filterName}\n            checked={filterStatus}\n            onChange={(e) => this.handleClick(e)}\n          />\n          <label className=\"filter__label\" htmlFor={filterName}>\n            {this._filterText[filterName]}\n          </label>\n        </div>\n      );\n    }\n    return FILTER_ITEMS;\n  }\n  _filterText = {\n    all: 'Все',\n    0: 'Без пересадок',\n    1: '1 пересадка',\n    2: '2 пересадки',\n    3: '3 пересадки'\n  }\n}","import React, { Component } from 'react'\nimport Filter from '../Filter'\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"card row__col-side\">\n        <Filter\n          filters={this.props.filters}\n          onChange={this.props.onChange}\n          timeout={this.props.timeout}\n        />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport './style.css'\n\nexport default class Tabs extends Component {\n  render() {\n    return (\n      <ul\n        className=\"tabs card\"\n        onClick={(e) => this.handleClick(e)}\n      >\n        <li\n          data-sorter=\"cheapest\"\n          className=\"tabs__item tabs__item_active\"\n        >Самый дешевый</li>\n        <li\n          data-sorter=\"fastest\"\n          className=\"tabs__item\"\n        >Самый быстрый</li>\n      </ul>\n    );\n  }\n  handleClick(e) {\n    this.highlight(e);\n    this.props.onClick(e);\n  }\n  // WARN: если mouseDown на табе, а mouseUp вне, то this=undefined\n  // UPD: неактуально, но следить\n  highlight(e) {\n    const cssClass = 'tabs__item_active';\n    if (e.target.classList.contains(cssClass)) {\n      return;\n    } else {\n      // (от)подключение стилей для (де)активированной сортировки\n      e.currentTarget.querySelector('.' + cssClass).classList.remove(cssClass);\n      e.target.classList.add(cssClass);\n      // WARN: удалить позже, если не понадобится\n      // this.setState({ sort: e.target.dataset.sorter });\n    }\n  }\n}","import React, { Component } from 'react'\n\nexport default class Flight extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: []\n    }\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.details !== state.details && props.details !== undefined) {\n      return {\n        details: props.details\n      };\n    }\n    return null;\n  }\n  render() {\n    const flights = this.state.details\n      .map((segment, i) => {\n        return (\n          <div key={i} className=\"flight row\">\n            <div className=\"flight__block\">\n              <span className=\"text-grey\">\n                {`${segment.origin} - ${segment.destination}`}\n              </span>\n              <span className=\"fw-bold\">{getHours(segment.date, segment.duration)}</span>\n            </div>\n            <div className=\"flight__block\">\n              <span className=\"text-grey\">В пути</span>\n              <span className=\"fw-bold\">\n                {getDuration(segment.duration)}\n              </span>\n            </div>\n            <div className=\"flight__block\">\n              <span className=\"text-grey\">\n                {describeStops(segment.stops)}\n              </span>\n              <span className=\"fw-bold\">\n                {segment.stops.map(\n                  (item, i) => {\n                    const result = i > 0 ? `, ${item}` : item;\n                    return result;\n                  }\n                )}\n              </span>\n            </div>\n          </div>\n        );\n      })\n    return flights;\n    // return (\n    //   <div className=\"flight row\">\n    //     <div className=\"flight__block\">\n    //       {/* <span className=\"text-grey\">MOW - HKT</span> */}\n    //       <span className=\"text-grey\">\n    //         {`${this.state.details[0].origin} - ${this.state.details[0].destination}`}\n    //       </span>\n    //       <span className=\"fw-bold\">10:45 - 08:00</span>\n    //     </div>\n    //     <div className=\"flight__block\">\n    //       <span className=\"text-grey\">В пути</span>\n    //       <span className=\"fw-bold\">21ч 15м</span>\n    //     </div>\n    //     <div className=\"flight__block\">\n    //       <span className=\"text-grey\">2 пересадки</span>\n    //       <span className=\"fw-bold\">HKG, JNB</span>\n    //     </div>\n    //   </div>\n    // );\n  }\n}\nfunction getDuration(minutes) {\n  const h = parseInt(minutes / 60);\n  const m = Math.round((minutes / 60 - h) * 60);\n  return `${h}ч ${m}м`;\n}\nfunction describeStops(arr) {\n  switch (arr.length) {\n    case 1: return '1 пересадка';\n    case 2: return '2 пересадки';\n    case 3: return '3 пересадки';\n    default: return 'Без пересадок';\n  }\n}\nfunction getHours(timeTakeoff, minutesDuration) {\n  const start = new Date(timeTakeoff);\n  const end = new Date(Date.parse(timeTakeoff) + minutesDuration * 60 * 1000);\n\n  const stH = start.getHours() < 10 ? '0' + start.getHours() : start.getHours();\n  const stM = start.getMinutes() < 10 ? '0' + start.getMinutes() : start.getMinutes();\n\n  const endH = end.getHours() < 10 ? '0' + end.getHours() : end.getHours();\n  const endM = end.getMinutes() < 10 ? '0' + end.getMinutes() : end.getMinutes();\n  return `${stH}:${stM} - ${endH}:${endM}`;\n}","import React, { Component } from 'react';\nimport './style.css';\n// import logo from './logo_s7.png'\nimport Flight from '../Flight'\n\nexport default class Ticket extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticketInfo: {}\n    }\n  }\n  render() {\n    return (\n      <div className=\"card ticket\">\n        <div className=\"row row_btwn\">\n          <span className=\"price\">\n            {`${this.state.ticketInfo.price} Р`}\n          </span>\n          <div className=\"logo-iata\">\n            <img src={`http://pics.avs.io/99/36/${this.state.ticketInfo.carrier}.png`} alt={this.state.ticketInfo.carrier} />\n          </div>\n        </div>\n        <Flight details={this.state.ticketInfo.segments} />\n      </div>\n    );\n  }\n  // WARN: разобраться _детально_, как это работает и нужно ли\n  static getDerivedStateFromProps(props, state) {\n    if (props.ticketInfo !== state.ticketInfo && props.ticketInfo !== undefined) {\n      return {\n        ticketInfo: props.ticketInfo\n      };\n    }\n    return null;\n  }\n}","import React, { Component } from 'react'\nimport Ticket from '../Ticket'\n\nexport default class TicketList extends Component {\n\n  render() {\n    if (!this.props.ticketsArray) {\n      return <p className={'row'}>Загрузка билетов</p>;\n    }\n    const tickets = this.props.ticketsArray.map((item, i) => <Ticket ticketInfo={item} key={i} />);\n    return (\n      <div className='tickets'>\n        {tickets}\n      </div>\n    );\n  }\n}\n  // async componentDidMount() {\n  //   this.setState(state => {\n  //     let t = Object.assign({}, state);\n  //     t.filters = this.props.filters;\n  //     t.sort = this.props.sort;\n  //     return t;\n  //   })\n  //   this._t = await this.askServer();\n  //   this.setState({allowShow: true})\n  //   console.log(this._t);\n  // }\n  // componentWillUnmount() {\n  //   this._t = [];\n  //   this.setState({allowShow: false})\n  //   console.log('!!! UNMOUNT !!!')\n  // }\n  // static getDerivedStateFromProps(props, state) {\n  //   if (props.filters !== state.filters && props.filters !== undefined && props.sort !== state.sort && props.sort !== undefined) {\n  //     return {\n  //       filters: props.filters,\n  //       sort: props.sort\n  //     };\n  //   }\n  //   return null;\n  // }\n//   async askServer(sort=this.props.sort, filters=this.props.filters) {\n//     let url = new URL('https://front-test.beta.aviasales.ru');\n//     let entryPath = new URL('/search', url);\n//     let searchPath = new URL('/tickets?searchId=', url);\n//     let id = await getSearchID(entryPath);\n//     const path = searchPath + id;\n//     console.group('получаем новые билеты...');\n//     console.log('search ID: ' + id + ', URL:', path);\n//     // получаем ВСЕ билеты\n//     let ticketsAll = await getTicketList(path);\n//     // ФИЛЬТР\n//     let rawFiltered = [];\n//     if (filters.all === true) {\n//       rawFiltered = ticketsAll;\n//     } else {\n//       // Возвращает массив чисел, которые означают нужное количество пересадок.\n//       let targetFilters = Object.entries(filters)\n//       .filter(item => item[0] !== 'all')\n//       .filter(item => item[1] === true)\n//       .map(item => +item[0]);\n//       // Если билет содержит хоть одно число из массива, то билет успешно проходит фильтр\n//       // удовлетворяет ли ticket.stops фильтрам (от 1 до 4 одновременно) из пропсов\n//       // WARN: если активны все 4, то лишняя обработка, т.к 4 фильтра === 1 фильтр 'all'\n//       rawFiltered = ticketsAll.filter(ticket => targetFilters.includes(getMaxStops(ticket)));\n//     }\n//     // СОРТ + урезает до 5\n//     let resultTicketList = sort === \"cheapest\" ? \n//     cheapest(rawFiltered) : \n//     fastest(rawFiltered);\n\n//     console.groupEnd();\n\n//     // this.setState(state => {\n//     //   const t = Object.assign({}, state); \n//     //   t.tickets = resultTicketList;\n//     //   return t;\n//     // });\n//     return await resultTicketList;\n//   }\n// }\n\n\n// function getMaxStops(ticket) {\n//   return Math.max(ticket.segments[0].stops.length, ticket.segments[1].stops.length);\n// }\n// function getSearchID(url) {\n//   return fetch(url)\n//     .then(res => res.json())\n//     .then(json => json.searchId);\n// }\n// async function getTicketList(url) {\n//   let store = [];\n//   for (let stop = false, i = 0; stop !== true && i < 100; i += 1) {\n//     if (i === 100) {\n//       console.warn('СЧЕТЧИК', i)\n//     }\n//     let pack = await fetchTicketPack(url);\n//     stop = pack.stop;\n//     store.push(...pack.tickets);\n//     if (stop) {\n//       console.warn('searching success! stop:', pack.stop, ', count of tickets:', store.length);\n//     }\n//   }\n//   return store;\n// }\n// async function fetchTicketPack(url) {\n//   let req = await fetch(url);\n//   if (req.status === 500) {\n//     return await fetchTicketPack(url);\n//   }\n//   return await req.json();\n// }\n// function cheapest(tickets) {\n//   return tickets\n//     .slice()\n//     .sort((a, b) => a.price - b.price)\n//     .slice(0, 5);\n// }\n// function fastest(tickets) {\n//   return tickets\n//     .slice()\n//     .sort((a, b) => {\n//       return a.segments.reduce((prev, item) => prev.duration + item.duration)\n//         -\n//         b.segments.reduce((prev, item) => prev.duration + item.duration);\n//     })\n//     .slice(0, 5);\n// }","import React, { Component } from 'react'\n\nimport Tabs from '../Tabs'\nimport TicketList from '../TicketList'\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allowRender: false,\n      _buf: null\n    }\n  }\n  render() {\n    return (\n      <div className=\"main row__col-main\">\n        <Tabs onClick={this.props.onClick} />\n        <TicketList\n          ticketsArray={this.state._buf}\n        />\n      </div>\n    )\n  }\n  // static getDerivedStateFromProps(props, state) {\n  //   if (props.filters !== state.filters && props.filters !== undefined && props.sort !== state.sort && props.sort !== undefined) {\n  //     return {sort: props.sort, filters: props.filters, allowRender: false}\n  //   }\n  //   return null;\n  // }\n  async componentDidMount() {\n    let a = await this.askServer(this.props.sort);\n    this.setState(state => { return { allowRender: true, _buf: a } })\n  }\n  async componentDidUpdate(prevProps) {\n    if (\n      prevProps !== this.props\n    ) {\n      this.setState(() => { return { allowRender: false, _buf: null } })\n      let a = await this.askServer(this.props.sort);\n      this.setState(() => { return { allowRender: true, _buf: a } })\n    }\n  }\n  // componentWillUnmount() {\n  //   this.setState(state => {return {allowRender: false, _buf: null}})\n  // }\n  async askServer(sort = this.props.sort, filters = this.props.filters) {\n    let url = new URL('https://front-test.beta.aviasales.ru');\n    let entryPath = new URL('/search', url);\n    let searchPath = new URL('/tickets?searchId=', url);\n    let id = await getSearchID(entryPath);\n    const path = searchPath + id;\n    console.group('получаем новые билеты...');\n    console.log('search ID: ' + id + ', URL:', path);\n    // получаем ВСЕ билеты\n    let ticketsAll = await getTicketList(path);\n    // ФИЛЬТР\n    let rawFiltered = [];\n    if (filters.all === true) {\n      rawFiltered = ticketsAll;\n    } else {\n      // Возвращает массив чисел, которые означают нужное количество пересадок.\n      let targetFilters = Object.entries(filters)\n        .filter(item => item[0] !== 'all')\n        .filter(item => item[1] === true)\n        .map(item => +item[0]);\n      // Если билет содержит хоть одно число из массива, то билет успешно проходит фильтр\n      // удовлетворяет ли ticket.stops фильтрам (от 1 до 4 одновременно) из пропсов\n      // WARN: если активны все 4, то лишняя обработка, т.к 4 фильтра === 1 фильтр 'all'\n      rawFiltered = ticketsAll.filter(ticket => targetFilters.includes(getMaxStops(ticket)));\n    }\n    // СОРТ + урезает до 5\n    let resultTicketList = sort === \"cheapest\" ?\n      cheapest(rawFiltered) :\n      fastest(rawFiltered);\n\n    console.groupEnd();\n\n    // this.setState(state => {\n    //   const t = Object.assign({}, state); \n    //   t.tickets = resultTicketList;\n    //   return t;\n    // });\n    return await resultTicketList;\n  }\n\n}\nfunction getMaxStops(ticket) {\n  return Math.max(ticket.segments[0].stops.length, ticket.segments[1].stops.length);\n}\nfunction getSearchID(url) {\n  return fetch(url)\n    .then(res => res.json())\n    .then(json => json.searchId);\n}\nasync function getTicketList(url) {\n  let store = [];\n  for (let stop = false, i = 0; stop !== true && i < 100; i += 1) {\n    if (i === 100) {\n      console.warn('СЧЕТЧИК', i)\n    }\n    let pack = await fetchTicketPack(url);\n    stop = pack.stop;\n    store.push(...pack.tickets);\n    if (stop) {\n      console.warn('searching success! stop:', pack.stop, ', count of tickets:', store.length);\n    }\n  }\n  return store;\n}\nasync function fetchTicketPack(url) {\n  let req = await fetch(url);\n  if (req.status === 500) {\n    return await fetchTicketPack(url);\n  }\n  return await req.json();\n}\nfunction cheapest(tickets) {\n  return tickets\n    .slice()\n    .sort((a, b) => a.price - b.price)\n    .slice(0, 5);\n}\nfunction fastest(tickets) {\n  return tickets\n    .slice()\n    .sort((a, b) => {\n      return a.segments.reduce((prev, item) => prev.duration + item.duration)\n        -\n        b.segments.reduce((prev, item) => prev.duration + item.duration);\n    })\n    .slice(0, 5);\n}\n\n\n\n\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.css'\n\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport Main from './components/Main'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: \"cheapest\",\n      filters: {\n        all: true,\n        0: false,\n        1: false,\n        2: false,\n        3: false\n      },\n    }\n  }\n  _timeoutBeforeSearch = 2000;\n  render() {\n    // Это замыкание загоняет в буфер всё, что юзер накликает за N миллисекунд.\n    // Зачем: плохо дёргать сервер на каждое движение пользователя =>\n    // => надо поменьше писать в стейт, как вариант.\n    let handleSearchParams = this.bufferClicks(this._timeoutBeforeSearch);\n    return (\n      <div className='container'>\n        <div className=\"row\">\n          <Header />\n        </div>\n        <div className=\"row\">\n          <Sidebar\n            filters={this.state.filters}\n            onChange={handleSearchParams}\n            timeout={this._timeoutBeforeSearch}\n          />\n          <Main\n            onClick={handleSearchParams}\n            filters={this.state.filters}\n            sort={this.state.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n  // -----------------------\n  // WARN: А НАФИГА мне замыкание? Я и с ним вызываю буферизатор, который переписывает... или нет... 65 строка, короче.\n  // Бррр, нагородил.\n  // Ладно, для начала дописать визуальный отклик фильтров, а потом этим заняться\n  bufferClicks(ms) {\n    const TIMEOUT_TO_SETSTATE = ms;\n    const SAVED_THIS = this;\n\n    // инициализация буферов\n    let bufferSort = this.state.sort;\n    let bufferFilters = Object.assign({}, this.state.filters);\n\n    let timer;\n    let animTimer;\n    return function launchTimer(e) {\n      clearTimeout(timer);\n      // фиксация момента клика\n      // let firstClickTime = Date.now();\n      // console.log('click FIRED, time:', firstClickTime);\n\n      // Буферизация изменений на каждый клик\n      if (e.currentTarget.classList.contains('tabs')) {\n        bufferSort = e.target.dataset.sorter;\n      } else {\n        bufferFilters = SAVED_THIS.getNewFilter(e);\n      }\n      // запуск анимации ожидания\n      clearTimeout(animTimer);\n      let bufferAnim = document.querySelector('.timeout');\n      let animTip = document.querySelector('.timeout__tip');\n\n      animTip.className = 'timeout__tip';\n      bufferAnim.className = 'timeout';\n\n      animTip.classList.add('timeout__tip_run');\n      bufferAnim.classList.add('timeout_run');\n\n      animTimer = setTimeout(() => {\n        animTip.classList.remove('timeout__tip_run');\n        bufferAnim.classList.remove('timeout_run');\n      }, SAVED_THIS._timeoutBeforeSearch);\n      // запуск таймера\n      timer = setTimeout(() => {\n        // TODO: сброс буферов???\n        SAVED_THIS.setState(state => {\n          let newState = Object.assign({}, state);\n\n          newState.sort = bufferSort;\n          newState.filters = bufferFilters;\n\n          return newState;\n        })\n      }, TIMEOUT_TO_SETSTATE);\n\n      // добавление событий в соотв. BUFFER_ + очистка таймера + перезапуск таймера\n      // if ((Date.now() - firstClickTime) < TIMEOUT_TO_SETSTATE) {\n      //   // TODO: добавление событий в буферы\n      //   clearTimeout(timer);\n      //   launchTimer(e);\n      // }\n    }\n  }\n  // -----------------------\n  // Управление поведением фильтра + возврат списка активных фильтров\n  getNewFilter(e) {\n    const filterID = e.target.id;\n    // Предотвращение состояния \"все фильтры отключены\"\n    if (\n      this.state.filters[filterID] === true\n      &&\n      Object.entries(this.state.filters)\n        .filter(item => item[0] !== filterID)\n        .every(item => item[1] === false)\n    ) {\n      let st = Object.assign({}, this.state);\n      return st.filters;\n    }\n    // Отключение фильтра \"Все\" в случае клика по любому другому\n    if (\n      this.state.filters['all'] === true\n      &&\n      this.state.filters[filterID] === false\n      &&\n      filterID !== 'all'\n    ) {\n      const st = Object.assign({}, this.state);\n      st.filters.all = false;\n      st.filters[filterID] = !st.filters[filterID];\n      return st.filters;\n    }\n    // Отключение всех фильтров в случае клика по \"Все\", кроме него\n    if (\n      filterID === 'all'\n      &&\n      Object.values(this.state.filters)\n        .some(item => item === true)\n    ) {\n      const st = Object.assign({}, this.state);\n      for (let key in st.filters) {\n        if (st.filters.hasOwnProperty(key)) {\n          st.filters[key] = false;\n        }\n      }\n      st.filters.all = true;\n      return st.filters;\n    }\n    // Активация фильтров во всех других случаях\n    const st = Object.assign({}, this.state);\n    st.filters[filterID] = !st.filters[filterID];\n    return st.filters;\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}